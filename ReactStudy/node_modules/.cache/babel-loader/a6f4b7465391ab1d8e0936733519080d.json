{"ast":null,"code":"var _jsxFileName = \"/Users/i7y/Desktop/HelloReact/my-app/src/btnClick.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ClickDemo extends Component {\n  constructor() {\n    super(...arguments);\n    this.count = 100;\n\n    this.click3 = () => {\n      console.log(\"写法3\", this.count);\n    };\n\n    this.click4 = () => {\n      console.log(\"写法4\", this.count);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), \"/* \\u5199\\u6CD5\\u4E00\\uFF1A\\u6700\\u5927\\u7684\\u5F0A\\u7AEF\\u662F\\u4E0D\\u80FD\\u5904\\u7406\\u903B\\u8F91\\u590D\\u6742\\u7684\\u4E8B\\u4EF6\\uFF0C\\u5426\\u5219\\u4EE3\\u7801\\u884C\\u6570\\u592A\\u591A\\uFF0C \\u4E0D\\u63A8\\u8350\\u6B64\\u79CD\\u5199\\u6CD5\\uFF0C\\u9002\\u7528\\u4E8E\\u5C11\\u91CF\\u903B\\u8F91\\u4EE3\\u7801 */\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          ///匿名函数\n          console.log(\"匿名函数\", this.count);\n        },\n        children: \"btn1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), \"// bind \\u4EC5\\u4EC5\\u662F\\u6539\\u53D8 this \\u6307\\u5411\\uFF0C\\u800C\\u4E0D\\u4F1A\\u6267\\u884C\\u8BE5\\u51FD\\u6570\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.click2.bind(this),\n        children: \"btn2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.click3,\n        children: \"btn3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \"/// \\u63A8\\u8350\\u8BE5\\u5199\\u6CD5\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.click4();\n        },\n        children: \"btn4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"// \\u9519\\u8BEF\\u5199\\u6CD5: \\u4E8B\\u4EF6\\u51FD\\u6570\\u540E\\u5E26() // render \\u4F1A\\u6267\\u884C\\u5185\\u90E8\\u5E26\\u6709() \\u7684\\u8BED\\u53E5 // this.click2() \\u6CA1\\u6709\\u8FD4\\u56DE\\u503C\\uFF0C\\u5373\\u8FD4\\u56DE\\u662F\\u672A\\u5B9A\\u4E49\\u7684 undefined // \\u8BE5\\u53E5\\u4EE3\\u7801\\u5B9E\\u9645\\u662F \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undefined,\n        children: \"btn2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.click2(),\n        children: \"btn2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  } // click2 被事件系统调用，所以 this 指向事件系统，而不是 ClickDemo 实例\n\n\n  click2() {\n    console.log(\"写法2\", this.count);\n  } // 箭头函数，不会关注谁调用，this 指向永远外部作用域，也就是 ClickDemo 实例\n\n\n}","map":{"version":3,"names":["React","Component","ClickDemo","count","click3","console","log","click4","render","click2","bind","undefined"],"sources":["/Users/i7y/Desktop/HelloReact/my-app/src/btnClick.js"],"sourcesContent":["import React, {Component} from 'react'\n\nexport default class ClickDemo extends Component {\n\n  count = 100\n\n  render(){\n    return (\n      <div>\n        <input/>\n        /* \n           写法一：最大的弊端是不能处理逻辑复杂的事件，否则代码行数太多，\n           不推荐此种写法，适用于少量逻辑代码\n           */\n        <button onClick={ ()=>{\n            ///匿名函数\n            console.log(\"匿名函数\",this.count)\n\n        }}>btn1</button>\n\n        // bind 仅仅是改变 this 指向，而不会执行该函数\n        <button onClick={this.click2.bind(this)}>btn2</button>\n        <button onClick={this.click3}>btn3</button>\n\n        /// 推荐该写法\n        <button onClick={ ()=>{\n            this.click4()\n        }}>btn4</button>\n\n        // 错误写法: 事件函数后带()\n        // render 会执行内部带有() 的语句\n        // this.click2() 没有返回值，即返回是未定义的 undefined\n        // 该句代码实际是 <button onClick={undefined}>btn2</button>\n        // <button onClick={this.click2()}>btn2</button>\n\n    </div>\n    )\n  }\n\n  // click2 被事件系统调用，所以 this 指向事件系统，而不是 ClickDemo 实例\n  click2(){\n    console.log(\"写法2\",this.count)\n  }\n  // 箭头函数，不会关注谁调用，this 指向永远外部作用域，也就是 ClickDemo 实例\n  click3 = ()=>{\n    console.log(\"写法3\",this.count)\n  }\n  click4 = ()=>{\n    console.log(\"写法4\",this.count)\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAE/CE,KAF+C,GAEvC,GAFuC;;IAAA,KA0C/CC,MA1C+C,GA0CtC,MAAI;MACXC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAKH,KAAvB;IACD,CA5C8C;;IAAA,KA6C/CI,MA7C+C,GA6CtC,MAAI;MACXF,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAKH,KAAvB;IACD,CA/C8C;EAAA;;EAI/CK,MAAM,GAAE;IACN,oBACE;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QADF,0TAME;QAAQ,OAAO,EAAG,MAAI;UAClB;UACAH,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,KAAKH,KAAxB;QAEH,CAJD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,iIAaE;QAAQ,OAAO,EAAE,KAAKM,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF,eAcE;QAAQ,OAAO,EAAE,KAAKN,MAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF,qDAiBE;QAAQ,OAAO,EAAG,MAAI;UAClB,KAAKG,MAAL;QACH,CAFD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF,+TAwBa;QAAQ,OAAO,EAAEI,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAxBb,sBAyBK;QAAQ,OAAO,EAAE,KAAKF,MAAL,EAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBL;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA8BD,CAnC8C,CAqC/C;;;EACAA,MAAM,GAAE;IACNJ,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAKH,KAAvB;EACD,CAxC8C,CAyC/C;;;AAzC+C"},"metadata":{},"sourceType":"module"}